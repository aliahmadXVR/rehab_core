
max_obstacle_height: 0.60

footprint: [[-0.2, -0.2435], [-0.2, 0.235], [0.2, 0.235], [0.2, -0.235]]

map_type: voxel
obstacle_layer:
 enabled: true
 obstacle_range: 2.5
 raytrace_range: 3.0
#  track_unknown_space: true
 combination_method: 1
 min_obstacle_height: 0.20
 max_obstacle_height: 0.35

 observation_sources: scaner front_lidar
 scaner: {sensor_frame: Lidar_link, data_type: LaserScan, topic: /scan, marking: true, clearing: true}
 front_lidar: {sensor_frame: front_lidar, data_type: LaserScan, topic: /front_scan, marking: true, clearing: true}

rgbd_obstacle_layer:
  enabled:               true
  voxel_decay:           3     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        3.0    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     false   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources: bump_mark
  bump_mark:
    data_type: PointCloud2
    topic: /bumper2pointcloud/pointcloud
    marking: true
    clearing: false
    min_obstacle_height: 0.01     #default 0, meters
    max_obstacle_height: 0.03     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
    filter: ""              #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter o


#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true